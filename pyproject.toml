[project]
name = "clkpoc"
version = "0.0.0"
requires-python = ">=3.11"

[build-system]
requires = ["setuptools>=68"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
addopts = "-q -ra --strict-markers --strict-config --cov=src --cov-report=lcov:lcov.info --cov-fail-under=50"
testpaths = ["tests"]
python_files = ["test*.py"]      # allow testTs.py
filterwarnings = ["error::DeprecationWarning"]
asyncio_mode = "auto"  # pytest-asyncio: no need to sprinkle @pytest.mark.asyncio

[tool.coverage.report]
show_missing = true

[tool.coverage.run]
branch = true
source = ["src"]

[tool.pyright]
pythonVersion = "3.11"
typeCheckingMode = "strict"
reportUnknownParameterType = true
reportUnknownArgumentType = true
reportUnknownMemberType = true
reportUnknownVariableType = true
venvPath = "."
venv = "venv"
exclude = ["aux", "**/venv/**", "**/build/**", "**/.mypy_cache/**"]
typeStubPath = ["typings"]
useLibraryCodeForTypes = true
#reportMissingTypeStubs = false

[tool.mypy]
python_version = "3.11"
warn_unused_ignores = true
warn_redundant_casts = true
warn_no_return = true
disallow_any_generics = true
disallow_untyped_defs = true
no_implicit_optional = true
strict_equality = true
exclude = '(^\.venv/|/build/|/.mypy_cache/)'

[tool.ruff]
lint.select = ["E","F","I","UP","B"]
lint.ignore = ["N802","N803","N806"]  # allow camelCase names
line-length = 100
